<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.velox.cloud.ms.rest</groupId>
	<artifactId>PeopleService</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>PeopleService</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>restdocker</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		</dependency>	
		<dependency> 
		    <groupId>org.springframework.boot</groupId> 
		    <artifactId>spring-boot-starter-thymeleaf</artifactId> 
		</dependency>
		<dependency> 
		    <groupId>org.springframework</groupId> 
		    <artifactId>spring-web</artifactId> 
		</dependency>
		<dependency>
		    <groupId>org.mongodb</groupId>
		    <artifactId>mongo-java-driver</artifactId>
			<!-- <version>3.8.0</version> -->
		</dependency>
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		</dependency>	
		  <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-devtools</artifactId>
		    <optional>true</optional>
		  </dependency>
	</dependencies>

<!-- 	<profiles> -->
<!-- 		<profile> -->
<!-- 		    <id>standalone</id> -->
<!-- 		    <activation> -->
<!-- 		        <property> -->
<!-- 		            <name>docker</name> -->
<!-- 		            <value>!true</value> -->
<!-- 		        </property> -->
<!-- 		    </activation> -->
<!-- 		    <dependencies> -->
<!-- 		        <dependency> -->
<!-- 		            <groupId>de.flapdoodle.embed</groupId> -->
<!-- 		            <artifactId>de.flapdoodle.embed.mongo</artifactId> -->
<!-- 		        </dependency> -->
<!-- 		    </dependencies> -->
<!-- 		</profile> -->
		
<!-- 		<profile> -->
<!-- 		    <id>docker</id> -->
<!-- 		    <activation> -->
<!-- 		        <property> -->
<!-- 		            <name>docker</name> -->
<!-- 		            <value>true</value> -->
<!-- 		        </property> -->
<!-- 		    </activation> -->
<!-- 		    <build> -->
<!-- 		        <plugins> -->
<!-- 				      <plugin> -->
<!-- 				        <groupId>io.fabric8</groupId> -->
<!-- 				        <artifactId>fabric8-maven-plugin</artifactId> -->
<!-- 				        <version>3.5.41</version> -->
<!-- 				      </plugin> -->
<!-- 		            <plugin> -->
<!-- 		                <groupId>com.spotify</groupId> -->
<!-- 		                <artifactId>dockerfile-maven-plugin</artifactId> -->
<!-- 		                <version>1.4.7</version> -->
<!-- 		                <executions> -->
<!-- 		                    <execution> -->
<!-- 		                        <id>default</id> -->
<!-- 		                        <goals> -->
<!-- 		                            <goal>build</goal> -->
<!-- 		                            <goal>push</goal> -->
<!-- 		                        </goals> -->
<!-- 		                    </execution> -->
<!-- 		                </executions> -->
<!-- 		                <configuration> -->
<!-- 		                    <repository>${docker.image.prefix}/${project.artifactId}</repository> -->
<!-- 		                    <tag>${project.version}</tag> -->
<!-- 		                    <buildArgs> -->
<!-- 		                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE> -->
<!-- 		                    </buildArgs> -->
<!-- 		                </configuration> -->
<!-- 		            </plugin> -->
<!-- 		        </plugins> -->
<!-- 		    </build>  -->
<!-- 		</profile> -->
<!-- 	</profiles> -->

	<build>
		<plugins>
<!-- 			<plugin> -->
<!-- 				<groupId>io.fabric8</groupId> -->
<!-- 				<artifactId>fabric8-maven-plugin</artifactId> -->
<!-- 				<version>3.5.41</version> -->
<!-- 			</plugin> -->

		    <plugin>
		      <groupId>com.spotify</groupId>
		      <artifactId>docker-maven-plugin</artifactId>
		      <configuration>
		        <imageName>peoplesvc</imageName>
        		<dockerDirectory>./</dockerDirectory>
<!-- 		        <baseImage>java:8</baseImage> -->
<!-- 		        <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint> -->
		        <!-- copy the service's jar file from target into the root directory of the image --> 
		        <resources>
		           <resource>
		             <targetPath>/</targetPath>
		             <directory>${project.build.directory}</directory>
		             <include>${project.build.finalName}.jar</include>
		           </resource>
		        </resources>
				<buildArgs>
					<JAR_PATH>D:/users/claudiu/GitRepo/peopleservice/target</JAR_PATH>
					<JAR_FILE>PeopleService-0.0.1-SNAPSHOT.jar</JAR_FILE>
				</buildArgs>
		      </configuration>
		    </plugin>
		    
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<addResources>true</addResources>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${project.name}-${project.version}</finalName>
	</build>


</project>
